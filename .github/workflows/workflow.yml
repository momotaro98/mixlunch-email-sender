name: Workflow
on: push
jobs:

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:

    - name: Setup Go
      uses: actions/setup-go@v1
      with:
        go-version: 1.14.4

    - name: Setup GOPATH
      run: |
        echo "::set-env name=GOPATH::$(go env GOPATH)"
        echo "::add-path::$(go env GOPATH)/bin"
      shell: bash

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Get dependencies
      run: go get -v -t -d ./...

    - name: Run unit test
      run: make test


  deploy-app:
    # Ref link: https://dev.classmethod.jp/articles/github-action-ecr-push/
    name: Deploy app
    needs: [test]
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPO_NAME }}
      run: |
        IMAGE_TAG=latest
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG


  notify-deploy:
    name: Notify deployment
    needs: [deploy-app]
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:

    - name: Checkout code
      # Checkout is needed to get secrets
      uses: actions/checkout@v2

    - name: Notify to Slack
      env:
        SERVICE_NAME: ${{ secrets.SERVICE_NAME }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      run: |
        echo "Notifying to Slack"
        bash <(curl -Ls https://gist.githubusercontent.com/momotaro98/96aa94b67d487942d05268b8c6a1d6cc/raw/mixlunch_common_deploy_slack_notify.sh)
        echo "Notifying to Slack Done!"
